plugins {
    id("kotlin")
    id("java")
    id("maven-publish")
    id("org.jetbrains.dokka") version "$kotlin_version"
//    id "com.github.johnrengelman.shadow" version "7.1.0"
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_9
    targetCompatibility = JavaVersion.VERSION_1_9
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "9"
        apiVersion = "1.5"
    }
}

//shadowJar {
//    destinationDirectory.set(buildDir)
//    archiveBaseName.set("$rootProject.name-navigation")
//    archiveClassifier.set("all")
//    archiveVersion.set(project.version)
//}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.apache.commons:commons-math3:3.6.1"

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'org.knowm.xchart:xchart:3.8.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier('sources')
}

publishing {
    publications {
        release(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifactId = "navigation"
            pom {
                name = "Joos"
                description = "A comprehensive kotlin library designed for FTC."
                url = 'https://github.com/amarcolini/joos'
                developers {
                    developer {
                        id = 'amarcolini'
                        name = 'Alessandro Marcolini'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'testRepo'
            url = '../testRepo'
        }
    }
}

tasks["clean"].doFirst {
    delete file("graphs")
    delete file("config")
}